<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sample.engine.impl.db.FooImpl">

  <!-- insert -->
  
  <insert id="insertFoo" parameterType="com.sample.engine.impl.db.FooImpl">
    insert into ${prefix}MY_FOO (
      ID_,
      NAME_,
      VALUE_,
      REV_
    ) values (
      #{id, jdbcType=VARCHAR},
      #{name, jdbcType=VARCHAR},
      #{value, jdbcType=VARCHAR},
      1
    )
  </insert>

  <!-- update -->
  
  <update id="updateFoo" parameterType="com.sample.engine.impl.db.FooImpl">
    update ${prefix}MY_FOO set
      REV_ = #{revisionNext, jdbcType=INTEGER},
      NAME_ = #{name, jdbcType=VARCHAR},
      VALUE_ = #{value, jdbcType=VARCHAR}
    where ID_ = #{id, jdbcType=VARCHAR}
      and REV_ = #{revision, jdbcType=INTEGER}
  </update>

  <!-- delete -->
    
  <delete id="deleteFoo" parameterType="com.sample.engine.impl.db.FooImpl">
    delete from ${prefix}MY_FOO where ID_ = #{id} and REV_ = #{revision}
  </delete>

  <!-- query -->
  
  <resultMap id="fooResultMap" type="com.sample.engine.impl.db.FooImpl">
    <id column="ID_" property="id" jdbcType="VARCHAR" />
    <result column="NAME_" property="name" jdbcType="VARCHAR" />
    <result column="VALUE_" property="value" jdbcType="VARCHAR" />
    <result column="REV_" property="revision" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="selectFoosByQueryCriteria" parameterType="com.sample.engine.impl.db.FooQueryImpl" resultMap="fooResultMap">
    ${limitBefore}
    select distinct RES.* ${limitBetween}
    <include refid="selectFoosByQueryCriteriaSql"/>
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="selectFooCountByQueryCriteria" parameterType="com.sample.engine.impl.db.FooQueryImpl" resultType="long">
    select count(distinct RES.ID_)
    <include refid="selectFoosByQueryCriteriaSql"/>
  </select>

  <sql id="selectFoosByQueryCriteriaSql">
    from ${prefix}MY_FOO RES
    <where>
      <if test="id != null">
        ID_ = #{id}
      </if>
      <if test="name != null">
        NAME_ = #{name}
      </if>
      <if test="value != null">
        VALUE_ = #{value}
      </if>      
    </where>
  </sql>

</mapper>
